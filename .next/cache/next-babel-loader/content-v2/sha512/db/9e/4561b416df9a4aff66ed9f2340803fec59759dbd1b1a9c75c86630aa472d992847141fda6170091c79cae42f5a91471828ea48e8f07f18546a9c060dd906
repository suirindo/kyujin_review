{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomohiro/Downloads/nextjs_sample1/src/pages/blog/[slug].js\";\nimport Image from 'next/image';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from \"../../components/layout\";\nimport PrevNext from \"../../components/prevNext\";\nimport Seo from \"../../components/seo\";\nimport * as style from \"../../styles/singleBlog.module.scss\";\nimport { getAllBlogs, getSingleBlog } from '../../utils/mdQueries';\n\nconst SingleBlog = ({\n  frontmatter,\n  markdownBody,\n  prev,\n  next\n}) => {\n  const {\n    title,\n    date,\n    excerpt,\n    image\n  } = frontmatter;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Seo, {\n      title: title,\n      description: excerpt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.hero,\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: image,\n        alt: \"blog-image\",\n        height: \"500\",\n        width: \"1000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: markdownBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PrevNext, {\n        prev: prev,\n        next: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 6\n  }, this);\n};\n\nexport default SingleBlog;\nexport async function getStaticPaths() {\n  const {\n    orderedBlogs\n  } = await getAllBlogs();\n  const paths = orderedBlogs.map(orderedBlog => `/blog/${orderedBlog.slug}`);\n  return {\n    paths: paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    singleDocument\n  } = await getSingleBlog(context);\n  const {\n    orderedBlogs\n  } = await getAllBlogs();\n  const prev = orderedBlogs.filter(orderedBlog => orderedBlog.frontmatter.id === singleDocument.data.id - 1);\n  const next = orderedBlogs.filter(orderedBlog => orderedBlog.frontmatter.id === singleDocument.data.id + 1);\n  return {\n    props: {\n      frontmatter: singleDocument.data,\n      markdownBody: singleDocument.content,\n      prev: prev,\n      next: next\n    }\n  };\n}","map":{"version":3,"sources":["/Users/tomohiro/Downloads/nextjs_sample1/src/pages/blog/[slug].js"],"names":["Image","ReactMarkdown","Layout","PrevNext","Seo","style","getAllBlogs","getSingleBlog","SingleBlog","frontmatter","markdownBody","prev","next","title","date","excerpt","image","hero","wrapper","container","getStaticPaths","orderedBlogs","paths","map","orderedBlog","slug","fallback","getStaticProps","context","singleDocument","filter","id","data","props","content"],"mappings":"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","sourcesContent":["import Image from 'next/image'\nimport ReactMarkdown from 'react-markdown'\nimport Layout from \"../../components/layout\"\nimport PrevNext from \"../../components/prevNext\"\nimport Seo from \"../../components/seo\"\nimport * as style from \"../../styles/singleBlog.module.scss\"\nimport { getAllBlogs, getSingleBlog } from '../../utils/mdQueries'\n\n\nconst SingleBlog = ({ frontmatter, markdownBody, prev, next }) => {\n    const { title, date, excerpt, image } = frontmatter\n    return (\n     <Layout>\n        <Seo title = {title} description= {excerpt} />\n        <div className = {style.hero}>\n            <Image src = {image} alt = \"blog-image\" height = \"500\" width = \"1000\" />\n        </div>\n        <div className={style.wrapper}>\n            <div className={style.container}>\n                <h1>{title}</h1>\n                <p>{date}</p>\n                    <ReactMarkdown>\n                        {markdownBody}\n                    </ReactMarkdown> \n            </div>\n            <PrevNext prev = {prev} next = {next} />\n        </div>\n     </Layout>\n  )\n}\n\nexport default SingleBlog\n\nexport async function getStaticPaths(){\n    const { orderedBlogs } = await getAllBlogs()    \n    const paths = orderedBlogs.map((orderedBlog) => `/blog/${orderedBlog.slug}`)\n\n    return {\n        paths:paths,\n        fallback:false,\n    }\n}\n\nexport async function getStaticProps(context){\n    const { singleDocument } = await getSingleBlog(context)\n\n    const { orderedBlogs } = await getAllBlogs()\n        const prev = orderedBlogs.filter(orderedBlog => orderedBlog.frontmatter.id === singleDocument.data.id -1 )\n        const next = orderedBlogs.filter(orderedBlog => orderedBlog.frontmatter.id === singleDocument.data.id +1 )\n\n    return {\n        props: {\n            frontmatter: singleDocument.data,\n            markdownBody: singleDocument.content,\n            prev: prev,\n            next: next,\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}