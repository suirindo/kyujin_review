{"ast":null,"code":"import matter from 'gray-matter';\nexport const blogsPerPage = 5;\nexport async function getAllBlogs() {\n  const blogs = (context => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      let slug = key.replace(/^.*[\\\\\\/]/, '').slice(0, -3);\n      const value = values[index];\n      const document = matter(value.default);\n      return {\n        frontmatter: document.data,\n        slug: slug\n      };\n    });\n    return data;\n  })(require.context('../data', true, /\\.md$/));\n\n  const orderedBlogs = blogs.sort((a, b) => {\n    return b.frontmatter.id - a.frontmatter.id;\n  });\n  const numberPages = Math.ceil(orderedBlogs.length / blogsPerPage);\n  return {\n    orderedBlogs: JSON.parse(JSON.stringify(orderedBlogs)),\n    numberPages: numberPages\n  };\n}\nexport async function getSingleBlog(context) {\n  const {\n    slug\n  } = context.params;\n  const data = awaitimport(`../data/${slug}.md`);\n  const singleDocument = matter(data.default);\n  return {\n    singleDocument: singleDocument\n  };\n}","map":{"version":3,"sources":["/Users/tomohiro/Downloads/nextjs_sample1/src/utils/mdQueries.js"],"names":["matter","blogsPerPage","getAllBlogs","blogs","context","keys","values","map","data","key","index","slug","replace","slice","value","document","default","frontmatter","require","orderedBlogs","sort","a","b","id","numberPages","Math","ceil","length","JSON","parse","stringify","getSingleBlog","params","awaitimport","singleDocument"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAArB;AAEP,OAAO,eAAeC,WAAf,GAA4B;AAC/B,QAAMC,KAAK,GAAG,CAAEC,OAAD,IAAa;AACxB,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,UAAMC,MAAM,GAAED,IAAI,CAACE,GAAL,CAASH,OAAT,CAAd;AACA,UAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,CAACE,GAAD,EAAMC,KAAN,KAAgB;AAClC,UAAIC,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,EAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,CAAC,CAAvC,CAAX;AACA,YAAMC,KAAK,GAAGR,MAAM,CAACI,KAAD,CAApB;AACA,YAAMK,QAAQ,GAAGf,MAAM,CAACc,KAAK,CAACE,OAAP,CAAvB;AACA,aAAO;AACHC,QAAAA,WAAW,EAAEF,QAAQ,CAACP,IADnB;AAEHG,QAAAA,IAAI,EAACA;AAFF,OAAP;AAIH,KARY,CAAb;AASA,WAAOH,IAAP;AACH,GAba,EAaXU,OAAO,CAACd,OAAR,CAAgB,SAAhB,EAA2B,IAA3B,EAAiC,OAAjC,CAbW,CAAd;;AAeA,QAAMe,YAAY,GAAGhB,KAAK,CAACiB,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAAS;AACrC,WAAOA,CAAC,CAACL,WAAF,CAAcM,EAAd,GAAmBF,CAAC,CAACJ,WAAF,CAAcM,EAAxC;AACH,GAFoB,CAArB;AAIA,QAAMC,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUP,YAAY,CAACQ,MAAb,GAAsB1B,YAAhC,CAApB;AAEA,SAAO;AACHkB,IAAAA,YAAY,EAAES,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,YAAf,CAAX,CADX;AAEHK,IAAAA,WAAW,EAAEA;AAFV,GAAP;AAIH;AAED,OAAO,eAAeO,aAAf,CAA6B3B,OAA7B,EAAsC;AACzC,QAAM;AAAEO,IAAAA;AAAF,MAAWP,OAAO,CAAC4B,MAAzB;AACA,QAAMxB,IAAI,GAAGyB,WAAW,CAAE,WAAUtB,IAAK,KAAjB,CAAxB;AACA,QAAMuB,cAAc,GAAGlC,MAAM,CAACQ,IAAI,CAACQ,OAAN,CAA7B;AAEA,SAAO;AACHkB,IAAAA,cAAc,EAAEA;AADb,GAAP;AAGH","sourcesContent":["import matter from 'gray-matter'\n\nexport const blogsPerPage = 5\n\nexport async function getAllBlogs(){\n    const blogs = ((context) => {\n        const keys = context.keys()\n        const values =keys.map(context)\n        const data = keys.map((key, index) => {\n            let slug = key.replace(/^.*[\\\\\\/]/, '').slice(0, -3)\n            const value = values[index]\n            const document = matter(value.default)\n            return {\n                frontmatter: document.data,\n                slug:slug\n            }\n        })\n        return data\n    })(require.context('../data', true, /\\.md$/))\n\n    const orderedBlogs = blogs.sort((a,b) => {\n        return b.frontmatter.id - a.frontmatter.id\n    })\n\n    const numberPages = Math.ceil(orderedBlogs.length / blogsPerPage)\n\n    return {\n        orderedBlogs: JSON.parse(JSON.stringify(orderedBlogs)),\n        numberPages: numberPages\n    }\n}\n\nexport async function getSingleBlog(context) {\n    const { slug } = context.params\n    const data = awaitimport(`../data/${slug}.md`)\n    const singleDocument = matter(data.default)\n\n    return {\n        singleDocument: singleDocument\n    }\n}"]},"metadata":{},"sourceType":"module"}